name: Deploy to UBA-DePWD-Pilot
on:
  push:
    branches:
      - main
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.17.0'

      - name: npm install with legacy peer deps, build
        run: |
          ls -ltra
          if [ -f .env ]; then
            rm .env
          fi
          echo '${{ secrets.ENV_PILOT }}' > .env
          ls -ltra
          yarn install
          yarn run build
          ls -ltra

      - name: Show PWD
        run: |
          echo "Current Working Directory:"
          pwd

      - name: List Contents
        run: |
          echo "Contents of the current directory (in reverse order):"
          ls -lr

      - name: List Contents of dist directory
        run: |
          echo "Contents of the dist directory (in reverse order):"
          ls -lr dist

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID_PILOT }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY_PILOT }}
          aws configure set default.region ${{ secrets.AWS_S3_BUCKET_REGION_PILOT }}

      - name: Upload to s3 Bucket
        run: |
          aws s3 sync dist s3://${{ secrets.AWS_S3_BUCKET_PILOT }}/
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_PILOT }} --paths "/*"

      - name: Post job cleanup
        run: |
          echo "Cleanup done."
        continue-on-error: true

      ## Notify on Slack
      - name: Notify on Slack channel
        uses: iRoachie/slack-github-actions@v2.3.2
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
        if: ${{ always() }}        
